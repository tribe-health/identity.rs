name: Build and run tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
    paths-ignore:
      - 'docs/**'

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        project:
          [
            identity_core,
            identity_diff,
            identity_iota,
          ]
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Get current date
        if: matrix.os == 'ubuntu-latest'
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Get current date
        if: matrix.os == 'windows-latest'
        run: echo "CURRENT_DATE=$(Get-Date -Format "yyyy-MM-dd")" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          # Add date to the cache to keep it up to date
          key: ${{ matrix.project }}-${{ matrix.os }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.project }}-${{ matrix.os }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}

      - name: Cache cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          # Add date to the cache to keep it up to date
          key: ${{ matrix.project }}-${{ matrix.os }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.project }}-${{ matrix.os }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}

      - name: Cache cargo target
        uses: actions/cache@v2
        with:
          path: ${{ matrix.project}}/target
          # Add date to the cache to keep it up to date
          key: ${{ matrix.project }}-${{ matrix.os }}-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.project }}-${{ matrix.os }}-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}

      - name: Build ${{ matrix.project }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path=${{ matrix.project }}/Cargo.toml --all --release

      - name: Run tests for ${{ matrix.project }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path=${{ matrix.project }}/Cargo.toml --all --release

  build-and-test-wasm:
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install WASM toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install wasm-pack
        run: yarn global add wasm-pack

      - name: Install JS dependencies
        run: yarn
        working-directory: bindings/wasm

      - name: Build WASM bindings
        run: yarn build
        working-directory: bindings/wasm

      # - name: Run tests
      #   run: yarn test
      #   working-directory: bindings/wasm
